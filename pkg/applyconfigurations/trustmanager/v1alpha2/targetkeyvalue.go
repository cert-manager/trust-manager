/*
Copyright The cert-manager Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by controller-gen. DO NOT EDIT.

package v1alpha2

import (
	trustmanagerv1alpha2 "github.com/cert-manager/trust-manager/pkg/apis/trustmanager/v1alpha2"
)

// TargetKeyValueApplyConfiguration represents a declarative configuration of the TargetKeyValue type for use
// with apply.
type TargetKeyValueApplyConfiguration struct {
	Key                      *string                            `json:"key,omitempty"`
	Format                   *trustmanagerv1alpha2.BundleFormat `json:"format,omitempty"`
	PKCS12ApplyConfiguration `json:",inline"`
}

// TargetKeyValueApplyConfiguration constructs a declarative configuration of the TargetKeyValue type for use with
// apply.
func TargetKeyValue() *TargetKeyValueApplyConfiguration {
	return &TargetKeyValueApplyConfiguration{}
}

// WithKey sets the Key field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Key field is set to the value of the last call.
func (b *TargetKeyValueApplyConfiguration) WithKey(value string) *TargetKeyValueApplyConfiguration {
	b.Key = &value
	return b
}

// WithFormat sets the Format field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Format field is set to the value of the last call.
func (b *TargetKeyValueApplyConfiguration) WithFormat(value trustmanagerv1alpha2.BundleFormat) *TargetKeyValueApplyConfiguration {
	b.Format = &value
	return b
}

// WithPassword sets the Password field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Password field is set to the value of the last call.
func (b *TargetKeyValueApplyConfiguration) WithPassword(value string) *TargetKeyValueApplyConfiguration {
	b.PKCS12ApplyConfiguration.Password = &value
	return b
}

// WithProfile sets the Profile field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Profile field is set to the value of the last call.
func (b *TargetKeyValueApplyConfiguration) WithProfile(value trustmanagerv1alpha2.PKCS12Profile) *TargetKeyValueApplyConfiguration {
	b.PKCS12ApplyConfiguration.Profile = &value
	return b
}
